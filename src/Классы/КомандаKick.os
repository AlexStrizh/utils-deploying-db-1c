Перем Лог;

Процедура ОписаниеКоманды(Команда) Экспорт

	Команда.Опция("b ibconnection", "", "строка подключения к информационной базе /S<адрес сервера>\<имя базы>")
					.ТСтрока()
					.ВОкружении("CU_KICK_IB CU_KICK_IBCONNECTION");

	Команда.Опция("u db-user", "", "пользователь (с правом администрирования кластера серверов)")
	 				.ТСтрока()
	 				.ВОкружении("CU_KICK_CLUSTER_USER");

	Команда.Опция("p db-pwd", "", "пароль пользователя (с правом администрирования кластера серверов)")
	 				.ТСтрока()
					.ВОкружении("CU_KICK_CLUSTER_PASSWORD CU_KICK_CLUSTER_PWD");
					 
	Команда.Опция("t try", "", "количество попыток отключения пользователя от информационной базы данных")
	 				.ТЧисло()
	 				.ВОкружении("CU_KICK_TRY")
					 .ПоУмолчанию(3);

	Команда.Опция("l lock", Истина, "блокировать сеансы (y/n). Может применяться для действия kill,
										| т.к. по умолчанию, при его выполнении автоматически блокируется начало сеансов")
	 				.ТБулево()
					.ВОкружении("CU_KICK_WITH_LOCK CU_KICK_LOCK");
		
	Команда.Аргумент("CONFIG", , "путь к файлу настройки подключений")
						.ТСтрока()
						.ВОкружении("CU_KICK_CONFIG")
						.Обязательный(Ложь)
						.ПоУмолчанию(ПараметрыПриложения.ПолучитьПолноеИмяКФайлуНастроекПодключения());

	Команда.Спек = "(CONFIG) | (-b [-u -p -t -l]) | (-b [-u -p -t -l] CONFIG)";

КонецПроцедуры

Процедура ВыполнитьКоманду(Знач Команда) Экспорт

	Лог.Информация("Начало выполнение команды <kick>");

	ПутьКФайлуНастроек = Команда.ЗначениеАргумента("CONFIG");
	
	Лог.Отладка(ПутьКФайлуНастроек);

	ОбщиеПараметры = ПараметрыПриложения.Параметры();

	СтрокаПодключенияКБазе				= Команда.ЗначениеОпции("ibconnection");
	АдминистраторКластера				= Команда.ЗначениеОпции("db-user");
	ПарольАдминистратораКластера		= Команда.ЗначениеОпции("db-pwd");
	КоличествоПопыток					= Команда.ЗначениеОпции("try");
	Блокировать							= Команда.ЗначениеОпции("lock");

	Лог.Отладка("Установлена опция <%1> со значением <%2>", "ibconnection", СтрокаПодключенияКБазе);
	Лог.Отладка("Установлена опция <%1> со значением <%2>", "db-user", АдминистраторКластера);
	Лог.Отладка("Установлена опция <%1> со значением <%2>", "db-pwd", ПарольАдминистратораКластера);
	Лог.Отладка("Установлена опция <%1> со значением <%2>", "try", КоличествоПопыток);
	Лог.Отладка("Установлена опция <%1> со значением <%2>", "lock", Блокировать);

	МенеджерКоманд = Новый МенеджерКоманд();

	МенеджерКоманд.УровеньЛога(ПараметрыПриложения.УровеньЛога())
					.ВерсияПлатформы(ОбщиеПараметры.ВерсияПлатформы)
					.АвторизацияНаКластереСерверов(АдминистраторКластера, ПарольАдминистратораКластера)
					.СтрокаПодключения(СтрокаПодключенияКБазе)
					.КоличествоПопытокОтключения(КоличествоПопыток);
	
	ПереопределитьПустыеПараметрыЗначениямиИзФайлаНастроек(МенеджерКоманд, ПутьКФайлуНастроек);

	МенеджерКоманд.ВыполнитьОтключениеПользователей();

	Лог.Информация("Завершено выполнение команды <kick>");
		
КонецПроцедуры

#Область Служебные_процедуры_и_функции

Процедура ПереопределитьПустыеПараметрыЗначениямиИзФайлаНастроек(Знач МенеджерКоманд, Знач ПутьКФайлуНастроек)
	Если НЕ ПустаяСтрока(ПутьКФайлуНастроек) Тогда

		ФайлНастроек = Новый Файл(ПутьКФайлуНастроек);

		Если ФайлНастроек.Существует() Тогда

			МенеджерКоманд.УстановитьНастройки(ПутьКФайлуНастроек);
			МенеджерКоманд.ПрочитатьФайлНастроек();

			Параметры = МенеджерКоманд.Параметры();

			Если НЕ ЗначениеЗаполнено(МенеджерКоманд.ПолучитьАдминистратораКластера()) Тогда
				Пользователь = Параметры.НастройкиПоУмолчанию.АдминистраторКластера;
				Пароль = Параметры.НастройкиПоУмолчанию.ПарольАдминистратораКластера;
				МенеджерКоманд.АвторизацияНаКластереСерверов(Пользователь, Пароль);
			КонецЕсли;

			Если НЕ ЗначениеЗаполнено(МенеджерКоманд.ПолучитьСтрокуПодключенияКБазе()) Тогда
				МенеджерКоманд.СтрокаПодключения(Параметры.НастройкиПоУмолчанию.СтрокаПодключенияКБазе);
			КонецЕсли;

			Лог.Отладка("Обработана настройка <%1>, установлен параметр <%2>", "АдминистраторКластера", МенеджерКоманд.ПолучитьАдминистратораКластера());
			Лог.Отладка("Обработана настройка <%1>, установлен параметр <%2>", "ПарольАдминистратораКластера", МенеджерКоманд.ПолучитьПарольАдминистратораКластера());
			Лог.Отладка("Обработана настройка <%1>, установлен параметр <%2>", "СтрокаПодключения", МенеджерКоманд.ПолучитьСтрокуПодключенияКБазе());
		Иначе
			ВызватьИсключение Новый ИнформацияОбОшибке(СтрШаблон("Файл настроек <%1> не найден", ПутьКФайлуНастроек), );
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

Лог = ПараметрыПриложения.Лог();