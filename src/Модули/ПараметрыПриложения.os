#Использовать logos
#Использовать tempfiles

Перем ЛогПриложения;
Перем ОбщиеПараметры;

Процедура Инициализация()

	ОбщиеПараметры = Новый Структура();
	ОбщиеПараметры.Вставить("ВерсияПлатформы", "8.3");

КонецПроцедуры

Процедура УстановитьВерсиюПлатформы(Знач ВерсияПлатформы) Экспорт
	ОбщиеПараметры.Вставить("ВерсияПлатформы", ВерсияПлатформы);
КонецПроцедуры

Функция УровеньЛога() Экспорт
	Возврат ЛогПриложения.Уровень();
КонецФункции

Функция ПолучитьПолноеИмяКФайлуНастроекПодключения() Экспорт

	ПутьКФайлуНастроек = ОбъединитьПути(ТекущийКаталог(), ИмяФайлаНастроекПодключений());
	ФайлНастроек = Новый Файл(ПутьКФайлуНастроек);

	Возврат ?(ФайлНастроек.Существует(), ФайлНастроек.ПолноеИмя, "");
	
КонецФункции

Функция ИмяФайлаНастроекПодключений() Экспорт
	Возврат "config.json";
КонецФункции

Процедура УстановитьРежимОтладкиПриНеобходимости(Знач РежимОтладки) Экспорт
	
	Если РежимОтладки Тогда
		ЛогПриложения.УстановитьУровень(УровниЛога.Отладка);
	КонецЕсли;
	
КонецПроцедуры 

Функция Параметры() Экспорт
	Возврат ОбщиеПараметры;
КонецФункции

 Функция Лог() Экспорт
	
	Если ЛогПриложения = Неопределено Тогда
		ЛогПриложения = Логирование.ПолучитьЛог(ИмяЛогаПриложения());
	КонецЕсли;

	Возврат ЛогПриложения;

КонецФункции

Функция ИмяЛогаПриложения() Экспорт
	Возврат "oscript.app." + ИмяПриложения();
КонецФункции

Функция ИмяПриложения() Экспорт
	Возврат "cu";
КонецФункции

Функция Версия() Экспорт
 	Возврат "0.1.0-beta";
КонецФункции

Инициализация();